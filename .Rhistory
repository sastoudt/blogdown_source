helperTest <- function(sparsity, signal,d){
precision.mat <- diag(d)
precision.mat[upper.tri(precision.mat)] <- signal*(runif(d*(d-1)/2) < sparsity)
## another thing to tune is this .2, how big the signal is probably matters, need to decide what is big in each context
precision.mat <- precision.mat + t(precision.mat)
## Check Pos-Def
eig <- eigen(precision.mat)
#print(sum(eig$values>0))
if(sum(eig$values>0)<d){
precision.mat = nearPD(precision.mat)
eig <- eigen(precision.mat$mat)
#print(sum(eig$values>0))
return(which(c(matrix(precision.mat[[1]])) < 0) %>% length())
}else{
eig <- eigen(precision.mat)
#print(sum(eig$values>0))
return(0)
}
}
helperTest(0)
helperTest(0, 0.5, 30)
helperTest(0.1, 0.5, 30)
helperTest(0.2, 0.5, 30)
helperTest(0.3, 0.5, 30)
helperTest(0.4, 0.5, 30)
helperTest(0.5, 0.5, 30)
helperTest(0.6, 0.5, 30)
helperTest(0.7, 0.5, 30)
helperTest(0.8, 0.5, 30)
helperTest(0.9, 0.5, 30)
helperTest(1, 0.5, 30)
s1=unlist(lapply(1:50, function(x){helperTest(0.1, 0.5, 30)}))
s2=unlist(lapply(1:50, function(x){helperTest(0.2, 0.5, 30)}))
s3=unlist(lapply(1:50, function(x){helperTest(0.3, 0.5, 30)}))
s4=unlist(lapply(1:50, function(x){helperTest(0.4, 0.5, 30)}))
s5=unlist(lapply(1:50, function(x){helperTest(0.5, 0.5, 30)}))
s6=unlist(lapply(1:50, function(x){helperTest(0.6, 0.5, 30)}))
s7=unlist(lapply(1:50, function(x){helperTest(0.7, 0.5, 30)}))
s8=unlist(lapply(1:50, function(x){helperTest(0.8, 0.5, 30)}))
s9=unlist(lapply(1:50, function(x){helperTest(0.9, 0.5, 30)}))
mean(s1)
mean(s2)
mean(s3)
mean(s4)
mean(s5)
mean(s6)
mean(s7)
mean(s8)
mean(s0)
mean(s9)
knitr::opts_chunk$set(echo = TRUE)
extra0 = as.matrix(helperCreateNice(0, 1, J))
extra1 = as.matrix(helperCreateNice(0.1, 1, J))
extra2 = as.matrix(helperCreateNice(0.2, 1, J))
extra3 = as.matrix(helperCreateNice(0.3, 1, J))
extra4 = as.matrix(helperCreateNice(0.4, 1, J))
extra5 = as.matrix(helperCreateNice(0.5, 1, J))
extra6 = as.matrix(helperCreateNice(0.6, 1, J))
extra7 = as.matrix(helperCreateNice(0.7, 1, J))
extra8 = as.matrix(helperCreateNice(0.8, 1, J))
extra9 = as.matrix(helperCreateNice(0.9, 1, J))
extra10 = as.matrix(helperCreateNice(1, 1, J))
## out of 900
length(which(c(extra0)==0))
length(which(c(extra1)<=0.01))
length(which(c(extra2)<=0.01))
length(which(c(extra3)<=0.01))
length(which(c(extra4)<=0.01))
length(which(c(extra5)<=0.01))
length(which(c(extra6)<=0.01))
length(which(c(extra7)<=0.01))
length(which(c(extra8)<=0.01))
length(which(c(extra9)<=0.01))
plot(c(mean(s1), mean(s2), mean(s3), mean(s4), mean(s5), mean(s6), mean(s7), mean(s8), mean(s9)))
setwd("/Users/Sara/Desktop/iNatPopAnalysis/Fall19/JSDMChecking/motivatingSimStudy")
load(file="marginalSpeciesResults.RData")
tryThis2=lapply(tryThis,function(x){do.call("rbind",x)})
helper <- function(x){
toReturn =  x %>% group_by(speciesNum) %>% summarise(mVal=mean(pVal), sdVal=sd(pVal), cover=length(which(pVal<0.05 | pVal>0.95)))
return(toReturn)
}
tryThis3=lapply(tryThis2, helper)
tryThis4=rbindlist(tryThis3, idcol = "index")
tryThis4$cover=tryThis4$cover/50
require(data.table)
helper <- function(x){
toReturn =  x %>% group_by(speciesNum) %>% summarise(mVal=mean(pVal), sdVal=sd(pVal), cover=length(which(pVal<0.05 | pVal>0.95)))
return(toReturn)
}
tryThis3=lapply(tryThis2, helper)
tryThis4=rbindlist(tryThis3, idcol = "index")
tryThis4$cover=tryThis4$cover/50
head(tryThis4)
knitr::opts_chunk$set(echo = TRUE)
tryThis5=subset(tryThis4, index<11)
dim(tryThis5)
dim(tryThis4)
crossWalk = cbind.data.frame(old=1:10, new=c(1,9:2))
crossWalk = cbind.data.frame(old=1:10, new=c(1,10:2))
tryThis6=merge(tryThis5, crossWalk,by.x="index",by.y="old")
head(tryThis6)
tail(tryThis6)
ggplot(tryThis6, aes(new, cover, group=speciesNum, col=as.factor(speciesNum)))+geom_point()+geom_line()+xlab("misspecification")+ylab("prob reject null")+ggtitle("Marginal Species")
require(ggplto2)
require(ggplot2)
ggplot(tryThis6, aes(new, cover, group=speciesNum, col=as.factor(speciesNum)))+geom_point()+geom_line()+xlab("misspecification")+ylab("prob reject null")+ggtitle("Marginal Species")
setwd("/Users/Sara/Desktop/iNatPopAnalysis/Fall19/JSDMChecking/motivatingSimStudy")
load(file="marginalSiteResults.RData")
tryThis2=lapply(tryThis,function(x){do.call("rbind",x)})
helper <- function(x){
toReturn =  x %>% group_by(siteNum) %>% summarise(mVal=mean(pVal), sdVal=sd(pVal), cover=length(which(pVal<0.05 | pVal>0.95)))
return(toReturn)
}
tryThis3=lapply(tryThis2, helper)
tryThis4=rbindlist(tryThis3, idcol = "index")
tryThis4$cover=tryThis4$cover/50
tryThis5=subset(tryThis4, index<11)
crossWalk = cbind.data.frame(old=1:10, new=c(1,10:2))
tryThis6=merge(tryThis5, crossWalk,by.x="index",by.y="old")
head(tryThis6)
ggplot(tryThis6, aes(new, cover, group=siteNum, col=as.factor(siteNum)))+geom_point()+geom_line()+xlab("misspecification")+ylab("prob reject null")+ggtitle("Marginal Species")
## estimated by using information from all sites
X.unobs <- matrix(rnorm(30), 30,1)
dim(X.unobs)
species.effect <- rnorm(30)
species.effect
## 30 columns (species)
X <- matrix(rnorm(30*4),30,4)  ## value for every site
## 4 explanatory variables
X.coefs <- matrix(rnorm(30*4),30,4) ## each species gets a covariate for each of 4 things
dim(X)
dim(X.coefs)
crossprod(X.coefExtra,X.unobs)
## estimated by using information from all sites
X.unobs <- matrix(rnorm(30), 30,1)
species.effect <- rnorm(30)
misspecDegree=.1
X.coefExtra = misspecDegree
crossprod(X.coefExtra,X.unobs)
crossprodt(X.coefExtra,X.unobs)
tcrossprod(X.coefExtra,X.unobs)
getwd()
setwd("/Users/Sara/Desktop/iNatPopAnalysis/Fall19/JSDMChecking/motivatingSimStudy")
source("create.life3.R")
generateData = function(misspecDegree){
## baked in: 30 sites, 30 species, 2 latent factors
true.lv <- rbind(rmvnorm(n=15,mean=c(1,2)),rmvnorm(n=15,mean=c(-3,-1)))
## 30 rows (sites) with two latent variables
lv.coefs <- cbind(matrix(runif(30*3),30,3),1)
## 30 columns (species)
X <- matrix(rnorm(30*4),30,4)  ## value for every site
## 4 explanatory variables
X.coefs <- matrix(rnorm(30*4),30,4) ## each species gets a covariate for each of 4 things
## estimated by using information from all sites
X.unobs <- matrix(rnorm(30), 30,1)
species.effect <- rnorm(30)
X.coefExtra = misspecDegree
extra = tcrossprod(X.coefExtra,X.unobs)
sim.y <- create.life2(true.lv=true.lv, lv.coefs=lv.coefs, X=X, X.coefs=X.coefs, family = "binomial",extraEta=extra, speciesEffect=species.effect)
return(list(X=X, Y=sim.y, X.coefs=X.coefs))
}
simData=lapply(seq(0,0.9,by=.1),generateData) ## maybe these coefficients aren't big enought, but whatever, for now
generateData = function(misspecDegree){
## baked in: 30 sites, 30 species, 2 latent factors
true.lv <- rbind(rmvnorm(n=15,mean=c(1,2)),rmvnorm(n=15,mean=c(-3,-1)))
## 30 rows (sites) with two latent variables
lv.coefs <- cbind(matrix(runif(30*3),30,3),1)
## 30 columns (species)
X <- matrix(rnorm(30*4),30,4)  ## value for every site
## 4 explanatory variables
X.coefs <- matrix(rnorm(30*4),30,4) ## each species gets a covariate for each of 4 things
## estimated by using information from all sites
X.unobs <- matrix(rnorm(30), 30,1)
species.effect <- rnorm(30)
X.coefExtra = misspecDegree
extra = tcrossprod(X.coefExtra,X.unobs)
sim.y <- create.life3(true.lv=true.lv, lv.coefs=lv.coefs, X=X, X.coefs=X.coefs, family = "binomial",extraEta=extra, speciesEffect=species.effect)
return(list(X=X, Y=sim.y, X.coefs=X.coefs))
}
simData=lapply(seq(0,0.9,by=.1),generateData) ## maybe these coefficients aren't big enought, but whatever, for now
names(simData)=paste("m",seq(0,0.9,by=.1)*10,sep="_")
simData[[1]]
simData[[1]]$Y
helperFit <- function(idx){
fit.boral <- boral(simData[[idx]]$Y, X = simData[[idx]]$X, family = "binomial", lv.control=list(num.lv=2),
row.eff = "none", save.model = FALSE)
save(fit.boral,file=paste("simDataFit_",names(simData)[idx],".RData", sep=""))
}
getwd()
ptm <- proc.time()
lapply(1:length(simData),helperFit)
proc.time() - ptm
1091.686 /60
source("processResults.R")
testProcess=lapply(grep(".RData",list.files(), value = T), process_speciesSitePairs)
testProcess=lapply(grep(".RData",list.files(), value = T), process_speciesSitePairs,"")
require(boral)
testProcess=lapply(grep(".RData",list.files(), value = T), process_speciesSitePairs,"")
grep(".RData",list.files(), value = T)
grep("simDataFit",list.files(), value = T)
testProcess=lapply(grep("simDataFit",list.files(), value = T), process_speciesSitePairs,"")
plot(seq(0,0.9,by=.1),unlist(testProcess)[c(1,10:2)])
plot(seq(0,0.9,by=.1),unlist(testProcess))
testProcess=lapply(grep("simDataFit",list.files(), value = T), process_speciesRichness)
testProcess=lapply(grep("simDataFit",list.files(), value = T), process_speciesRichness,"")
plot(seq(0,0.9,by=.1),unlist(testProcess))
testProcess=lapply(grep("simDataFit",list.files(), value = T), process_speciesPrevalence,"")
plot(seq(0,0.9,by=.1),unlist(testProcess))
testProcess=lapply(grep("simDataFit",list.files(), value = T), process_marginalSpecies,"")
toP=rbindlist(testProcess, idcol = "index")
ggplot(toP, aes(index, pVal, group=speciesNum,col=as.factor(speciesNum)))+geom_point()+geom_line()+xlab("id of misspecification")
ggplot(toP, aes(index, pVal, group=siteNum,col=as.factor(siteNum)))+geom_point()+geom_line()+xlab("id of misspecification")
testProcess=lapply(grep("simDataFit",list.files(), value = T), process_marginalSites,"")
toP=rbindlist(testProcess, idcol = "index")
ggplot(toP, aes(index, pVal, group=siteNum,col=as.factor(siteNum)))+geom_point()+geom_line()+xlab("id of misspecification")
testProcess=lapply(grep("simDataFit",list.files(), value = T), process_jaccardSpecies,"")
plot(seq(0,0.9,by=.1),unlist(testProcess))
testProcess=lapply(grep("simDataFit",list.files(), value = T), process_jaccardSites,"")
plot(seq(0,0.9,by=.1),unlist(testProcess))
testProcess=lapply(grep("simDataFit",list.files(), value = T), process_speciesSitePairs,"")
plot(seq(0,0.9,by=.1),unlist(testProcess))
testProcess=lapply(grep("simDataFit",list.files(), value = T), process_speciesRichness,"")
plot(seq(0,0.9,by=.1),unlist(testProcess))
testProcess=lapply(grep("simDataFit",list.files(), value = T), process_speciesPrevalence,"")
plot(seq(0,0.9,by=.1),unlist(testProcess))
testProcess=lapply(grep("simDataFit",list.files(), value = T), process_marginalSpecies,"")
toP=rbindlist(testProcess, idcol = "index")
ggplot(toP, aes(index, pVal, group=speciesNum,col=as.factor(speciesNum)))+geom_point()+geom_line()+xlab("id of misspecification")
testProcess=lapply(grep("simDataFit",list.files(), value = T), process_marginalSites,"")
toP=rbindlist(testProcess, idcol = "index")
ggplot(toP, aes(index, pVal, group=siteNum,col=as.factor(siteNum)))+geom_point()+geom_line()+xlab("id of misspecification")
testProcess=lapply(grep("simDataFit",list.files(), value = T), process_jaccardSpecies,"")
plot(seq(0,0.9,by=.1),unlist(testProcess))
testProcess=lapply(grep("simDataFit",list.files(), value = T), process_speciesPrevalence,"")
plot(seq(0,0.9,by=.1),unlist(testProcess))
setwd("~/Desktop/tidytuesday/data/2019/2019-10-29")
sq = read.csv("nyc_squirrels.csv",stringsAsFactors = F)
View(sq)
names(sq)
sq %>% group_by(unique_squirrel_id) %>% summarise(primary_fur_color=primary_fur_color[1], highlight_fur_color=highlight_fur_color[1])
sq %>% group_by(unique_squirrel_id) %>% summarise(primary_fur_color=primary_fur_color[1], highlight_fur_color=highlight_fur_color[1]) %>% group_by(primary_fur_color, highlight_fur_color) %>% summarise(count=n())
sq %>% group_by(unique_squirrel_id) %>% summarise(primary_fur_color=primary_fur_color[1], highlight_fur_color=highlight_fur_color[1]) %>% group_by(primary_fur_color, highlight_fur_color) %>% summarise(count=n()) %>% arrange(desc(count))
sq %>% group_by(unique_squirrel_id) %>% summarise(primary_fur_color=primary_fur_color[1], highlight_fur_color=highlight_fur_color[1]) %>% group_by(primary_fur_color, highlight_fur_color) %>% summarise(count=n()) %>% arrange(desc(count)) %>% as.data.frame()
grep("#",sq$other_activities)
interactions = sq[grep("#",sq$other_activities),]
View(interactions)
plot(sq$long, sq$lat)
points(interactions$long, interactions$lat)
points(interactions$long, interactions$lat, col="red")
names(interactions)
mean(sq$age)
head(sq$age)
table(interactions$age)
table(sq$age)
interactions$shift
table(interactions$shift)
table(sq$shift)
head(sq)
interactions = sq[grep("#",sq$other_activities),]
interactions[1,]
interactions=interactions[-1, ]
head(interactions$other_activities)
grep("[0123456789]", sq$other_activities)
grep("[0123456789]", sq$other_activities, value = T)
interactions = sq[grep("#",sq$other_activities),]
interactions[1,] ## lol #jealous
interactions=interactions[-1, ]
strsplit(interactions$other_activities,"#")
lapply(strsplit(interactions$other_activities,"#"), function(x){x[2]})
nums = lapply(strsplit(interactions$other_activities,"#"), function(x){x[2]})
nums = unlist(lapply(strsplit(interactions$other_activities,"#"), function(x){x[2]}))
gsub("[^0-9]", "", nums)
#https://r.789695.n4.nabble.com/removing-all-non-numeric-characters-from-a-string-but-not-quot-quot-td4723146.html
justNums = gsub("[^0-9]", "", nums)
interactions$otherSquirrel=justNums
View(interactions)
substr("10132018",1,4)
helper <- function(x){
id = paste(interactions$hectare[x], interactions$shift[x],substr(interactions$date[x],1,4),str_pad(interactions$hectare_squirrel_number[x],width = 2,side = "left",pad = "0"),sep="-")
subset(sq, unique_squirrel_id = id )
}
tryThis=lapply(1:nrow(interactions), helper)
require(stringr)
tryThis=lapply(1:nrow(interactions), helper)
tryThis[[1]]
tryThis[[1]] %>% View()
setwd("~/Desktop/tidytuesday/data/2019/2019-10-29")
sq = read.csv("nyc_squirrels.csv",stringsAsFactors = F)
interactions = sq[grep("#",sq$other_activities),]
interactions[1,] ## lol #jealous
interactions=interactions[-1, ]
nums = unlist(lapply(strsplit(interactions$other_activities,"#"), function(x){x[2]}))
#https://r.789695.n4.nabble.com/removing-all-non-numeric-characters-from-a-string-but-not-quot-quot-td4723146.html
justNums = gsub("[^0-9]", "", nums)
interactions$otherSquirrel=justNums
helper <- function(x){
id = paste(interactions$hectare[x], interactions$shift[x],substr(interactions$date[x],1,4),str_pad(interactions$hectare_squirrel_number[x],width = 2,side = "left",pad = "0"),sep="-")
subset(sq, unique_squirrel_id == id )
}
tryThis=lapply(1:nrow(interactions), helper)
tryThis[[1]]
tryThis[[2]]
tryThis[[3]]
tryThis[[3]] %>% dim()
lapply(tryThis, nrow)
x=1
id = paste(interactions$hectare[x], interactions$shift[x],substr(interactions$date[x],1,4),str_pad(interactions$hectare_squirrel_number[x],width = 2,side = "left",pad = "0"),sep="-")
id
class(sq$unique_squirrel_id)
interactions$hectare=
substr("01",regexpr("[^0]",t),"")
interactions$hectare=
substr("01",regexpr("[^0]"),"")
interactions$hectare=
substr("01","[^0]","")
interactions$hectare=
gsub("01","[^0]","")
interactions$hectare=
gsub("01","[^0]","")
gsub("01","[^0]","")
sub("01","[^0]","")
substr("01",regexpr("[^0]","01"),nchar("01"))
regexpr("[^0]","01")
setwd("~/Desktop/tidytuesday/data/2019/2019-10-29")
sq = read.csv("nyc_squirrels.csv",stringsAsFactors = F)
interactions = sq[grep("#",sq$other_activities),]
interactions[1,] ## lol #jealous
interactions=interactions[-1, ]
nums = unlist(lapply(strsplit(interactions$other_activities,"#"), function(x){x[2]}))
#https://r.789695.n4.nabble.com/removing-all-non-numeric-characters-from-a-string-but-not-quot-quot-td4723146.html
justNums = gsub("[^0-9]", "", nums)
interactions$otherSquirrel=justNums
interactions$hectare=substr(interactions$hectare,regexpr("[^0]",interactions$hectare),nchar(interactions$hectare))
require(stringr)
helper <- function(x){
id = paste(interactions$hectare[x], interactions$shift[x],substr(interactions$date[x],1,4),str_pad(interactions$hectare_squirrel_number[x],width = 2,side = "left",pad = "0"),sep="-")
subset(sq, unique_squirrel_id == id )
}
tryThis=lapply(1:nrow(interactions), helper)
lapply(tryThis, nrow)
lapply(tryThis, nrow) %>% unlist() %>% summary()
tryThis[[1]]
interactions$otherSquirrelAge=unlist(lapply(tryThis,function(x){x$age}))
interactions$otherSquirrelPrimaryFurColor=unlist(lapply(tryThis,function(x){x$primary_fur_color}))
interactions$otherSquirrelHighlightFurColor=unlist(lapply(tryThis,function(x){x$highlight_fur_color}))
interactions %>% group_by(age, otherSquirrelAge)
interactions %>% group_by(age, otherSquirrelAge) %>% summarise(count=n())
interactions %>% group_by(primary_fur_color, otherSquirrelPrimaryFurColor) %>% summarise(count=n())
sq %>% group_by(primary_fur_color,unique_squirrel_id)
sq %>% group_by(unique_squirrel_id) %>% summarise(primaryColor=primary_fur_color[1]) %>% group_by(primaryColor) %>% summarise(count=n())
interactions %>% group_by(primary_fur_color, highlight_fur_color, otherSquirrelPrimaryFurColor, otherSquirrelHighlightFurColor) %>% summarise(count=n())
interactions %>% group_by(primary_fur_color, highlight_fur_color, otherSquirrelPrimaryFurColor, otherSquirrelHighlightFurColor) %>% summarise(count=n()) %>% arrange(desc(count))
helper <- function(x){
id = paste(interactions$hectare[x], interactions$shift[x],substr(interactions$date[x],1,4),str_pad(interactions$otherSquirrel[x],width = 2,side = "left",pad = "0"),sep="-")
subset(sq, unique_squirrel_id == id )
}
tryThis=lapply(1:nrow(interactions), helper)
lapply(tryThis, nrow) %>% unlist() %>% summary()
tryThis[[1]]
interactions$otherSquirrelAge=unlist(lapply(tryThis,function(x){x$age}))
interactions$otherSquirrelPrimaryFurColor=unlist(lapply(tryThis,function(x){x$primary_fur_color}))
interactions$otherSquirrelHighlightFurColor=unlist(lapply(tryThis,function(x){x$highlight_fur_color}))
interactions %>% group_by(age, otherSquirrelAge) %>% summarise(count=n())
interactions %>% group_by(primary_fur_color, otherSquirrelPrimaryFurColor) %>% summarise(count=n())
interactions %>% group_by(primary_fur_color, otherSquirrelPrimaryFurColor) %>% summarise(count=n()) %>% arrange(desc(count))
sq %>% group_by(unique_squirrel_id) %>% summarise(primaryColor=primary_fur_color[1]) %>% group_by(primaryColor) %>% summarise(count=n())
interactions %>% group_by(primary_fur_color, highlight_fur_color, otherSquirrelPrimaryFurColor, otherSquirrelHighlightFurColor) %>% summarise(count=n()) %>% arrange(desc(count))
interactions$other_activities
interactions[31,]
setwd("~/Desktop/blogdown_source")
library(blogdown)
new_content("tidytuesday/squirrel-census.Rmd")
blogdown::hugo_build()
blogdown::serve_site()
getwd()
blogdown:::insert_image_addin()
names(sq)
sq %>% group_by(unique_squirrel_id) %>% summarise(primary_fur_color=primary_fur_color[1], highlight_fur_color=highlight_fur_color[1]) %>% group_by(primary_fur_color, highlight_fur_color) %>% summarise(count=n()) %>% arrange(desc(count)) %>% as.data.frame()
styler:::style_selection()
unique(sq$other_activities)
unique(sq$other_activities)[1:10]
unique(sq$other_activities)[2:11]
unique(sq$other_activities)[3:11]
unique(sq$other_activities)
unique(sq$other_activities)[3:11]
unique(sq$other_activities)[3:12]
styler:::style_selection()
str_which(sq$other_activities,"#")
ggplot(sq,aes(long, lat))+geom_point()+geom_point(data=interactions, aes(long, lat), col="red")
ggplot(sq,aes(long, lat))+geom_point()+geom_point(data=interactions, aes(long, lat), col="red")+theme_minimal()
library(purrr)
map(str_split(interactions$other_activities,"#"), 2)
styler:::style_selection()
styler:::style_selection()
styler:::style_selection()
styler:::style_selection()
styler:::style_selection()
str_length(interactions$hectare[1])
regexpr("[^0]",interactions$hectare[1])
str_locate(interactions$hectare[1],"[^0]" )
interactions$hectare[1]
interactions <- sq[str_which(sq$other_activities, "#"), ]
interactions$hectare[1]
interactions$hectare[2]
str_locate(interactions$hectare[2],"[^0]" )
str_locate(interactions$hectare[2],"[^0]" )[1]
styler:::style_selection()
interactions <- sq[str_which(sq$other_activities, "#"), ]
interactions[1, ]
interactions <- interactions[-1, ] ## get rid of #jealous
nums <- unlist(map(str_split(interactions$other_activities, "#"), 2)) ## grab the number
justNums <- str_replace_all(nums, "[^0-9]", "") ## get rid of the extra junk
interactions$otherSquirrel <- justNums
getBuddy <- function(x) {
unpadHectare <- str_sub(interactions$hectare[x], str_locate(interactions$hectare[x], "[^0]")[1], str_length(interactions$hectare[x]))
# https://stat.ethz.ch/pipermail/r-help/2010-October/255450.html
newDate <- str_sub(interactions$date[x], 1, 4)
paddedSquirrel <- str_pad(interactions$otherSquirrel[x], width = 2, side = "left", pad = "0")
id <- paste(unpadHectare, newDate, paddedSquirrel, sep = "-")
subset(sq, unique_squirrel_id == id)
}
interactions$other_activities[31]
buddies <- map(1:nrow(interactions), getBuddy)
map(buddies,age)
map(buddies,~age)
map(buddies,~.age)
map(buddies,"age")
buddies[[1]]
buddies[[2]]
interactions[1]
interactions[1,]
x=1
unpadHectare <- str_sub(interactions$hectare[x], str_locate(interactions$hectare[x], "[^0]")[1], str_length(interactions$hectare[x]))
unpadHectare
newDate <- str_sub(interactions$date[x], 1, 4)
newDate
paddedSquirrel <- str_pad(interactions$otherSquirrel[x], width = 2, side = "left", pad = "0")
paddedSquirrel
id <- paste(unpadHectare, newDate, paddedSquirrel, sep = "-")
subset(sq, unique_squirrel_id == id)
sq <- read.csv("nyc_squirrels.csv",stringsAsFactors = F)
setwd("~/Desktop/tidytuesday/data/2019/2019-10-29")
sq <- read.csv("nyc_squirrels.csv",stringsAsFactors = F)
setwd("~/Desktop/tidytuesday/data/2019/2019-10-29")
sq <- read.csv("nyc_squirrels.csv",stringsAsFactors = F)
interactions <- sq[str_which(sq$other_activities, "#"), ]
interactions[1, ]
interactions <- interactions[-1, ] ## get rid of #jealous
nums <- unlist(map(str_split(interactions$other_activities, "#"), 2)) ## grab the number
justNums <- str_replace_all(nums, "[^0-9]", "") ## get rid of the extra junk
interactions$otherSquirrel <- justNums
getBuddy <- function(x) {
unpadHectare <- str_sub(interactions$hectare[x], str_locate(interactions$hectare[x], "[^0]")[1], str_length(interactions$hectare[x]))
# https://stat.ethz.ch/pipermail/r-help/2010-October/255450.html
newDate <- str_sub(interactions$date[x], 1, 4)
paddedSquirrel <- str_pad(interactions$otherSquirrel[x], width = 2, side = "left", pad = "0")
id <- paste(unpadHectare, newDate, paddedSquirrel, sep = "-")
subset(sq, unique_squirrel_id == id)
}
buddies <- map(1:nrow(interactions), getBuddy)
map(buddies, nrow) %>% unlist() %>% summary() ## check that everyone got a buddy
getBuddy <- function(x) {
unpadHectare <- str_sub(interactions$hectare[x], str_locate(interactions$hectare[x], "[^0]")[1,1], str_length(interactions$hectare[x]))
# https://stat.ethz.ch/pipermail/r-help/2010-October/255450.html
newDate <- str_sub(interactions$date[x], 1, 4)
paddedSquirrel <- str_pad(interactions$otherSquirrel[x], width = 2, side = "left", pad = "0")
id <- paste(unpadHectare, newDate, paddedSquirrel, sep = "-")
subset(sq, unique_squirrel_id == id)
}
buddies <- map(1:nrow(interactions), getBuddy)
map(buddies, nrow) %>% unlist() %>% summary() ## check that everyone got a buddy
getBuddy <- function(x) {
unpadHectare <- str_sub(interactions$hectare[x], str_locate(interactions$hectare[x], "[^0]")[1], str_length(interactions$hectare[x]))
# https://stat.ethz.ch/pipermail/r-help/2010-October/255450.html
print(unpadHectare)
newDate <- str_sub(interactions$date[x], 1, 4)
paddedSquirrel <- str_pad(interactions$otherSquirrel[x], width = 2, side = "left", pad = "0")
id <- paste(unpadHectare, newDate, paddedSquirrel, sep = "-")
subset(sq, unique_squirrel_id == id)
}
buddies <- map(1:nrow(interactions), getBuddy)
class(sq$unique_squirrel_id)
getBuddy <- function(x) {
unpadHectare <- str_sub(interactions$hectare[x], str_locate(interactions$hectare[x], "[^0]")[1], str_length(interactions$hectare[x]))
# https://stat.ethz.ch/pipermail/r-help/2010-October/255450.html
newDate <- str_sub(interactions$date[x], 1, 4)
paddedSquirrel <- str_pad(interactions$otherSquirrel[x], width = 2, side = "left", pad = "0")
id <- paste(unpadHectare, interactions$shift[x], newDate, paddedSquirrel, sep = "-")
subset(sq, unique_squirrel_id == id)
}
buddies <- map(1:nrow(interactions), getBuddy)
map(buddies, nrow) %>% unlist() %>% summary() ## check that everyone got a buddy
unlist(map(buddies, "age"))
interactions %<>% mutate(unlist(map(buddies, "age" )))
library(magrittr)
interactions %<>% mutate(unlist(map(buddies, "age" )))
names(interactions)
interactions %<>% mutate(otherSquirrelAge,unlist(map(buddies, "age" )))
interactions %<>% mutate(otherSquirrelAge=unlist(map(buddies, "age" )))
names(interactions)
styler:::style_selection()
interactions %>% group_by(age, otherSquirrelAge) %>% summarise(count=n())
styler:::style_selection()
styler:::style_selection()
blogdown::serve_site()
getwd()
setwd("~/Desktop/blogdown_source")
blogdown::serve_site()
styler:::style_selection()
names(sq)
blogdown::hugo_build()
blogdown::serve_site()
