setwd("~/Desktop/birdComparisons")
filepaths <- list.files("stateRates", full.names = T, pattern = "_rate.csv$")
all_state_level_rates <- do.call(rbind, lapply(filepaths, read_csv))
require(readr)
all_state_level_rates <- do.call(rbind, lapply(filepaths, read_csv))
require(dplyr)
source("stateDetectionRate_fn.R")
Schuetz_data <- readxl::read_xlsx("pnas.1820670116.sd01.xlsx", sheet = 3) %>%
select(scientific.name, Family, Order, log.10.mass, resident, crest, max.color.contrast)
inat_allstate <- all_state_level_rates %>%
filter(data_type == "iNat_diff") %>%
filter(ScientificName %in% Schuetz_data$scientific.name) %>%
left_join(Schuetz_data, by = c("ScientificName" = "scientific.name"))
View(inat_allstate)
unique(inat_allstate$data_type)
head(all_state_level_rates)
subset(all_state_level_rates, data_type =="eBird_complete_diff")
unique(all_state_level_rates$data_type)
ratefit <- lm(rate ~ eBird_rate, data = inat_allstate)
srf <- summary(ratefit)
plot(inat_allstate$eBird_rate, inat_allstate$rate)
abline(a = srf$coefficients[1,1], b = srf$coefficients[2,1])
srf
head(inat_allstate)
View(inat_allstate)
summary(inat_allstate$log.10.mass)
dim(all_state_level_rate)
all_state_level_rates %>%
filter(data_type == "iNat_diff") %>% dim()
intersect(unique(all_state_level_rates$ScientificName))
intersect(unique(all_state_level_rates$ScientificName), unique(Schuetz_data$scientific.name))
intersect(unique(all_state_level_rates$ScientificName), unique(Schuetz_data$scientific.name)) %>% length
length(unique(all_state_level_rates$ScientificName))
length(Schuetz_data$scientific.name)
head(inat_allstate)
setdiff(unique(all_state_level_rates$ScientificName), unique(Schuetz_data$scientific.name))
subset(all_state_level_rates, ScientificName %in% setdiff(unique(all_state_level_rates$ScientificName), unique(Schuetz_data$scientific.name))) %>% filter(data_type=="iNat_diff")
subset(all_state_level_rates, ScientificName %in% setdiff(unique(all_state_level_rates$ScientificName), unique(Schuetz_data$scientific.name))) %>% filter(data_type=="iNat_diff") %>% summary(rate)
summary(all_state_level_rates$rate)
droppedSpecies = subset(all_state_level_rates, ScientificName %in% setdiff(unique(all_state_level_rates$ScientificName), unique(Schuetz_data$scientific.name))) %>% filter(data_type=="iNat_diff")
plot(density(droppedSpecies$rate))
summary(droppedSpecies$rate)
iNat = all_state_level_rates %>% filter(data_type=="iNat_diff")
summary(iNat$rate)
summary(abs(droppedSpecies$rate))
summary(abs(iNat$rate))
droppedSpecies = subset(all_state_level_rates, ScientificName %in% setdiff(unique(Schuetz_data$scientific.name),unique(all_state_level_rates$ScientificName))) %>% filter(data_type=="iNat_diff")  ## now check schuetz
summary(abs(droppedSpecies$rate)) ## much rarer than overall, so we aren't dropping anything major in iNat
summary(abs(iNat$rate))
droppedSpecies
setdiff(unique(Schuetz_data$scientific.name),unique(all_state_level_rates$ScientificName))
subset(all_state_level_rates, ScientificName %in% setdiff(unique(Schuetz_data$scientific.name),unique(all_state_level_rates$ScientificName)))
droppedSpecies = subset(Schuetz_data, scientific.name %in% setdiff(unique(Schuetz_data$scientific.name),unique(all_state_level_rates$ScientificName)))   ## now check schuetz
droppedSpecies
summary(droppedSpecies$log.10.mass)
summary(Schuetz_data$log.10.mass)
summary(Schuetz_data$max.color.contrast)
summary(droppedSpecies$max.color.contrast)
plot(density(droppedSpecies$log.10.mass))
lines(density(Schuetz_data$log.10.mass))
names(inat_allstate)
ratefit <- lm(eBird_rate ~ rate*I(data_type), data = inat_allstate)
srf <- summary(ratefit)
inat_allstate
unique(inat_allstate$data_type)
ratefit <- lm(eBird_rate ~ rate*I(data_type), data = all_state_level_rates)
srf <- summary(ratefit)
srf
ggplot(all_state_level_rates,aes(rate,eBird_rate,col=data_type))+geom_point()
ggplot(all_state_level_rates,aes(rate,eBird_rate,col=data_type),alpha=.5)+geom_point()
ggplot(all_state_level_rates,aes(rate,eBird_rate,col=data_type))+geom_point(alpha=.5)
ggplot(all_state_level_rates,aes(rate,eBird_rate,col=data_type))+geom_point(alpha=.5)+geom_abline(slope = -1.824,intercept =  1.446e-03)
ggplot(all_state_level_rates,aes(rate,eBird_rate,col=data_type))+geom_point(alpha=.5)+geom_abline(slope = -1.824,intercept =  1.446e-03)+geom_abline(slope=-1.824e+00+1.304e+00, intercept =1.446e-03+ 6.042e-18)
ggplot(all_state_level_rates,aes(rate,eBird_rate,col=data_type))+geom_point(alpha=.5)+geom_abline(slope = -1.824,intercept =  1.446e-03)+geom_abline(slope=-1.824+1.304, intercept =1.446e-03+ 6.042e-18)
tryThis = subset(all_state_level_rates,rate>0)
plot(tryThis)
plot(tryThis$rate, tryThis$eBird_rate)
tryThis = subset(all_state_level_rates,eBird_rate>0)
plot(tryThis$rate, tryThis$eBird_rate)
ratefit <- lm(eBird_rate ~ rate*I(data_type), data = tryThis)
srf <- summary(ratefit)
srf
ggplot(all_state_level_rates,aes(rate,eBird_rate,col=data_type))+geom_point(alpha=.5)+geom_abline(slope = -1.824,intercept =  1.583e-03)+geom_abline(slope=-1.824+1.264e+00, intercept =1.583e-03+ -4.689e-05) ## impacted by lots of zeros
ggplot(tryThis,aes(rate,eBird_rate,col=data_type))+geom_point(alpha=.5)+geom_abline(slope = -1.824,intercept =  1.583e-03)+geom_abline(slope=-1.824+1.264e+00, intercept =1.583e-03+ -4.689e-05) ## impacted by lots of zeros
plot(ratefit)
ratefit <- lm(eBird_rate ~ rate*I(data_type), data = all_state_level_rates)
srf <- summary(ratefit)
ggplot(all_state_level_rates,aes(rate,eBird_rate,col=data_type))+geom_point(alpha=.5)+geom_smooth(method = "lm", fill = NA)
tryThis = subset(all_state_level_rates,eBird_rate>0)
ratefit <- lm(eBird_rate ~ rate*I(data_type), data = tryThis)
srf <- summary(ratefit)
ggplot(tryThis,aes(rate,eBird_rate,col=data_type))+geom_point(alpha=.5)+geom_smooth(method = "lm", fill = NA)
head(all_state_level_rates)
getwd()
filepaths <- list.files("stateRates", full.names = T, pattern = "_rate.csv$")
all_state_level_rates <- do.call(rbind, lapply(filepaths, read_csv))
library(lme4)
names(all_state_level_rates)
mod <- lmer(eBird_rate ~ rate*I(data_type) + log.10.mass + max.color.contrast + (1|state) )
mod <- lmer(eBird_rate ~ rate*I(data_type) + log.10.mass + max.color.contrast + (1|state) , data= all_state_level_rates)
library(readr)
Schuetz_data <- readxl::read_xlsx("pnas.1820670116.sd01.xlsx", sheet = 3) %>%
select(scientific.name, Family, Order, log.10.mass, resident, crest, max.color.contrast)
allstate <- all_state_level_rates %>%
filter(ScientificName %in% Schuetz_data$scientific.name) %>%
left_join(Schuetz_data, by = c("ScientificName" = "scientific.name"))
mod <- lmer(eBird_rate ~ rate*I(data_type) + log.10.mass + max.color.contrast + (1|state) , data= allstate)
summary(mod)
plot(mod)
View(allstate)
source("stateDetectionRate_fn.R")
length(statecode_df$State)
for (i in 1:length(statecode_df$State)) {
cat("Processing state", statecode_df$State[i], "\n")
this_sdrdf <- stateDetectionRate2(statecode = statecode_df$Abbreviation[i])
colnames(this_sdrdf) <- c("CommonName", "ScientificName", "eBird_rate", "eBird_incomplete_rate", "iNat_rate")
this_sdrdf <- this_sdrdf %>%
gather(key = "data_type", value = "rate",
-CommonName, -ScientificName, -eBird_rate) %>%
mutate(state = statecode_df$Abbreviation[i])
write_csv(this_sdrdf, paste0("stateRates2/", statecode_df$Abbreviation[i], "_rate.csv"))
}
mod <- lmer(rate ~ I(data_type) + log.10.mass*I(data_type) + max.color.contrast*I(data_type) + (1|state) , data= allstate)
summary(mod)
mod <- lmer(rate ~ I(data_type) + log.10.mass*I(data_type) + max.color.contrast*I(data_type) + (1|state) , data= allstate)
summary(mod)
setwd("~/Desktop/tidytuesday/data/2019/2019-12-24")
songs <- read.csv("christmas_songs.csv", stringsAsFactors = F)
require(readr)
lyrics <- read_tsv("christmas_lyrics.tsv")
lyrics[[1]]
class(lyrics)
head(lyrics)
head(songs)
library(tm)
library(SnowballC)
library(tidyr)
library(tidytext)
library(sentimentr)
allSentiment <- sentiment(allL$lyric)
allSentiment <- sentiment(lyrics$lyric)
lyrics2 = merge(allSentiment, lyrics, by.x="element_id", by.y="id")
lyrics$id = 1:nrow(lyrics)
lyrics2 = merge(allSentiment, lyrics, by.x="element_id", by.y="id")
lyrics2 %>% group_by(track_title) %>% summarise(meanSentiment = mean(sentiment)) %>% arrange(desc(meanSentiment))
lyrics2 %>% group_by(track_title) %>% summarise(meanSentiment = mean(sentiment)) %>% arrange(meanSentiment)
lyrics3 = group_by(track_title) %>% summarise(meanSentiment = mean(sentiment))
lyrics3 = lyrics2 %>% group_by(track_title) %>% summarise(meanSentiment = mean(sentiment))
ggplot(lyrics3, aes(meanSentiment))+geom_histogram()+theme_minimal()
lyrics2 %>% group_by(track_title) %>% summarise(meanSentiment = mean(sentiment)) %>% arrange(meanSentiment)
lyrics2 %>% group_by(track_title) %>% summarise(meanSentiment = mean(sentiment)) %>% arrange(meanSentiment) %>% head(20)
lyrics2 %>% filter(track_title=="You're A Mean One, Mr. Grinch")
names(lyrics2)
View(lyrics2)
lyrics2 %>% filter(track_title=="You're A Mean One, Mr. Grinch") %>% View()
lyrics2 %>% filter(track_title=="You're A Mean One, Mr. Grinch") %>% select(sentiment, lyric) %>% arrange(sentiment)
lyrics2 %>% group_by(track_title) %>% summarise(meanSentiment = mean(sentiment)) %>% arrange(desc(meanSentiment))
lyrics2 %>% filter(track_title=="Silent Night") %>% select(sentiment, lyric) %>% arrange(sentiment)
lyrics2 %>% filter(track_title=="Silent Night") %>% select(sentiment, lyric) %>% arrange(sentiment) %>% head()
lyrics2 %>% filter(track_title=="Silent Night") %>% select(sentiment, lyric) %>% arrange(desc(sentiment)) %>% head()
### Stoudt christmas
require(spotifyr)
stoudtChristmas <- get_playlist_tracks("0bso6lvKInn3myZ65vCSyj",authorization = access_token)
spotify_client_id="e5e1def2dc5245f1b4a2ff06b1067b9a" ## put yours here
spotify_client_secret="537cf8118dd24a31ad444867deeabe9f" ## put yours here
access_token <- get_spotify_access_token(client_id=spotify_client_id,client_secret=spotify_client_secret)
stoudtChristmas <- get_playlist_tracks("0bso6lvKInn3myZ65vCSyj",authorization = access_token)
require(genius)
require(purrr)
safe_lyrics <- safely(genius_lyrics)
artists = unlist(lapply(stoudtChristmas$track.artists,function(x){x[1,"name"]}))
track_name = stoudtChristmas$track.name
lyricsStoudt= mapply(safe_lyrics,artists,track_name, SIMPLIFY = F)
didItWork = lapply(lyricsStoudt,function(x){x$error})
sum(unlist(lapply(didItWork,is.null))) ## 80 of 100 have lyrics
length(lyricsStoudt)
getwd()
setwd("~/Desktop/tidytuesday/week52_2019")
save(lyricsStoudt, file="lyricsStoudtChristmas.RData")
test = lapply(lyricsStoudt, function(x){x$result})
allL = do.call("rbind",test)
allSentiment <- sentiment(allL$lyric)
allL$id = 1:nrow(allL)
allL2 = merge(allSentiment, allL, by.x="element_id", by.y="id")
allL2 %>% group_by(track_title) %>% summarise(meanSentiment = mean(sentiment)) %>% arrange(desc(meanSentiment))
allL2 %>% group_by(track_title) %>% summarise(meanSentiment = mean(sentiment)) %>% arrange(meanSentiment)
allL3 = allL2 %>% group_by(track_title) %>% summarise(meanSentiment = mean(sentiment))
ggplot(lyrics3, aes(meanSentiment))+geom_histogram()+theme_minimal()+geom_histogram(data=allL3, aes(meanSentiment))
ggplot(lyrics3, aes(meanSentiment))+geom_histogram()+theme_minimal()+geom_histogram(data=allL3, aes(meanSentiment),fill="red")
setwd("~/Desktop/sastoudt.github.io")
require(blogdown)
new_content("tidytuesday/holiday-song-sentiment.Rmd")
setwd("~/Desktop/blogdown_source")
new_content("tidytuesday/holiday-song-sentiment.Rmd")
styler:::style_selection()
styler:::style_selection()
styler:::style_selection()
styler:::style_selection()
styler:::style_selection()
styler:::style_selection()
styler:::style_selection()
styler:::style_selection()
styler:::style_selection()
styler:::style_selection()
styler:::style_selection()
styler:::style_selection()
styler:::style_selection()
styler:::style_selection()
lyrics2 %>% group_by(track_title) %>% summarise(meanSentiment = mean(sentiment)) %>% arrange(meanSentiment) %>% head(5)
tt <- lyrics2 %>% group_by(track_title) %>% summarise(meanSentiment = mean(sentiment)) %>% arrange(desc(meanSentiment)) %>% head(5)
tt
ggplot(lyrics3, aes(meanSentiment)) + geom_histogram() + theme_minimal()
blogdown::hugo_build()
blogdown::serve_site()
blogdown::hugo_build()
blogdown::serve_site()
blogdown::hugo_build()
blogdown::serve_site()
tt <- allL2 %>% group_by(track_title) %>% summarise(meanSentiment = mean(sentiment)) %>% arrange(desc(meanSentiment)) %>% head(5)
tt
tt <- allL2 %>% group_by(track_title) %>% summarise(meanSentiment = mean(sentiment)) %>% arrange(meanSentiment) %>% head(5)
tt
ggplot(lyrics3, aes(meanSentiment)) + geom_histogram() + theme_minimal() + geom_histogram(data = allL3, aes(meanSentiment), fill = "red")
View(lyricsStoudt)
lyrics2 %>% group_by(track_title) %>% summarise(meanSentiment = mean(sentiment)) %>% arrange(desc(meanSentiment)) %>% head(5)
blogdown::hugo_build()
blogdown::serve_site()
